@using Microsoft.AspNet.Identity
@model  SmartQA.Models.TestModels
@{
    
}
@if (Request.IsAuthenticated)
{
    <div class="containerLogin">
        <div class="row">
            <div class="col-md-12">
                <div class="panel panel-login">
                    <div class="panel-heading">
                        <div class="row">
                            <div class="col-xs-6">
                                @Html.ActionLink("Add Quiz", "BuildQuiz", "Home", null, new { @id = "register-form-link", @class = "active" })
                            </div>
                            <div class="col-xs-6">
                                @Html.ActionLink("Upload Quiz", "CreateQuiz", "Home", null, new { @id = "register-form-link" })
                            </div>
                        </div>
                        <hr>
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-lg-12">
                                @using (Html.BeginForm("BuildQuiz", "Home", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @id = "login-form", role = "form", enctype = "multipart/form-data" }))
                                {
                                    @Html.AntiForgeryToken()
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    @Html.Hidden("ID",Model.ID )
                                    @Html.Hidden("QuizSaved", Model.QuizSaved)
                                    <div class="panel-heading">
                                        <div class="row">
                                            <div class="form-group">
                                                   <div class="col-xs-8 col-lg-offset-2">
                                                       @if (Model.QuizSaved == false)
                                                       { 
                                                        @Html.TextBoxFor(m => m.Title, new { @class = "form-control ", @id = "titleQuiz", @tabindex = "1", @placeholder = "Quiz Name"})
                                                       }
                                                       else
                                                       {
                                                        @Html.TextBoxFor(m => m.Title, new { @class = "form-control ", @id = "titleQuiz", @tabindex = "1", disabled = "disabled" })
                                                       }
                                                           @Html.ValidationMessageFor(m => m.Title, "", new { @class = "text-danger" })
                                                </div
>
                                            </div>
                                        </div>
                                        <hr>
                                        @if (0 == @ViewBag.Index && Model.QuizSaved == false)
                                        {

                                        <div class="panel-heading">
                                            <div class="row">

                                                <div class="form-group">
                                                    <label class="answer" for="topicselect">Select Topic</label>
                                                    <div class="input-group col-xs-8 col-lg-offset-2">
                                                        @Html.DropDownListFor(m => m.TopicID, (SelectList)ViewBag.Topics, new { @class = "form-control dropbuildqu", @tabindex = "2" })
                                                    </div>
                                                </div>
                                            </div>
                                            <hr>
                                        </div>
                                        }
                                        else
                                        {
                                            @Html.Hidden("TopicID", Model.TopicID)
                                        }
                                    </div>
                                    <div class="info">
                                        <h3 class="text-left">Question @(Model.QuestionsNumber +1 )</h3>

                                    </div>
                                    for (int i = 0; i < @Model.Questions.Count(); i++)
                                    {
                                        if (i == @ViewBag.Index)
                                        {
                                            <div class="form-group">
                                                <div class="input-group col-lg-offset-2">
                                                    @Html.TextAreaFor(m => m.Questions[i].Text, new { rows = "3", cols = "85", @name = "quest", @id = "quest", @class = "form-control quest", @placeholder = "Question", @tabindex = "3", @autocomplete = "off" })
                                                    @Html.ValidationMessageFor(m => m.Questions[i].Text, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        }
                                    }
                                    for (int i = 0; i < @Model.Questions.Count(); i++)
                                    {
                                        if (i == @ViewBag.Index)
                                        {
                                            for (int j = 0; j < @Model.Questions[i].Answers.Count(); j++)
                                            {
                                                <div class="form-group">
                                                    <label class="answer" for="answer">Answer number   @(j + 1)</label>
                                                    <div class="input-group col-xs-8 col-lg-offset-2">
                                                        @Html.TextBoxFor(m => m.Questions[i].Answers[j].Text, new { @class = "form-control answertextbox ", @tabindex = (4 + j), @autocomplete = "off" })
                                                        @Html.ValidationMessageFor(m => m.Questions[i].Answers[j].Text, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            }
                                        }
                                    }
                                    <div class="form-group">
                                        <div class="row">
                                            <div class="col-sm-2 col-sm-offset-8">
                                                <input type="submit" name="addquestion" id="addquestion" tabindex="4" class="form-control btn btn-register addq" value=" Add Question">
                                            </div>
                                        </div>
                                    </div>
                                    <div class="panel-heading">
                                        <div class="row">


                                        </div>
                                        <hr>
                                    </div>
                                    <div class="col-lg-offset-3">
                                        <p class="handwritten">Done creating your quiz? Move to the next step.</p>
                                    </div>
                                    <div class="form-group">
                                        <div class="row">
                                            <div class="col-sm-2 col-sm-offset-5">
                                                <input type="submit" name="savequiz" id="savequiz" tabindex="4" class="form-control btn btn-success saveq" value="Next">
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>

                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
    

}
